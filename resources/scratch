################################################################################
#
# VSCode COLOR INFO
#
################################################################################

https://code.visualstudio.com/api/references/theme-color
https://code.visualstudio.com/api/extension-guides/color-theme

"generate" color scheme off current
view "scope" of character

https://stackoverflow.com/questions/30011737/how-to-add-theme-in-visual-studio-code
https://stackoverflow.com/questions/10834765/where-to-find-a-list-of-scopes-for-sublime2-or-textmate
https://marketplace.visualstudio.com/items?itemName=pedro-w.tmlanguage
https://sublime3-docs-zh.readthedocs.io/en/latest/reference/color_schemes.html
https://hashnode.com/post/create-and-publish-a-vs-code-theme-ckz2r72o00n44mjs1d4bkc0fb

https://code.visualstudio.com/api/extension-guides/color-theme
https://code.visualstudio.com/api/working-with-extensions/publishing-extension
https://code.visualstudio.com/api/references/theme-color

#################################################################### files #####

[archives/colors.html] is the hex of the colors I prefer
[archives/defaul-monokai.json] is the generated color scheme of the default vscode monokai
[archives/monokai-no-italic.tmTheme] is my original port of the textmate theme
[archives/Monokai22.yaml] is my scheme for warp.app
[archives/tmtheme-converted] is the output of an automatic converstion from tmTheme to JSON.
[archives/vsc-default-monokai-color-theme.json] is the ACTUAL default monokai from VSCode

[monokai22-generated-original.json] was generated off my initial port
[unified-scheme.txt] removes some colors not used often and includes some mods


##### DEAFULT LOCATION
/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/

################################################################# terminal #####

terminal.sexy
https://chrisyeh96.github.io/2020/03/28/terminal-colors.html
https://www.schemecolor.com/
https://coolors.co/
https://colordesigner.io/
https://meyerweb.com/eric/tools/color-blend/
https://htmlcolors.com/
https://color.adobe.com/
https://www.toptal.com/designers/colourcode/freebuild-color-builder
https://themes.vscode.one/
https://code.visualstudio.com/api/references/theme-color
https://code.visualstudio.com/updates/v1_69#_theme-tester-supports-built-in-themes
https://macromates.com/manual/en/language_grammars
https://code.visualstudio.com/api/extension-guides/color-theme
https://code.visualstudio.com/docs/getstarted/themes
https://medium.com/wearelaika/vscode-create-your-own-custom-theme-extension-96c67bd753f6
https://colors.dopely.top/color-blender/7031f5-afd891-7

https://www.schemecolor.com/new-year-celebration-color-scheme.php
https://www.schemecolor.com/20-best-camouflage-color-schemes.php
https://www.color-name.com/coyote.color

https://mdigi.tools/

https://github.com/michurin/xterm256-color-picker
256 Colors Cheat Sheet https://www.ditig.com/256-colors-cheat-sheet
Online table of colors https://jonasjacek.github.io/colors/
XOrg colors https://github.com/freedesktop/xorg-rgb/blob/master/rgb.txt
Vim colors https://github.com/vim/vim/blob/e30d10253f~/runtime/rgb.txt
https://github.com/grawity/code/blob/HEAD/misc/xterm-color-chooser#L4


########################################################## semantic tokens #####

### https://github.com/microsoft/vscode-extension-samples/tree/main/semantic-tokens-sample
Available token types:
    [comment] [string] [keyword] [number] [regexp] [operator] [namespace]
    [type] [struct] [class] [interface] [enum] [typeParameter] [function]
    [method] [macro] [variable] [parameter] [property] [label] [decorator]


Available token modifiers:
    [type.declaration] [type.documentation] [type.readonly] [type.static]
    [type.abstract] [type.deprecated] [type.modification] [type.async]

Some examples:
    [class.static.token]     [type.static.abstract]
    [class.static.token]     [type.static]

    [struct]

    [function.private]

    [support]

    [other]

An error case:
    [notInLegend]


VSC Token                            TextMate Fallback
namespace                        --> entity.name.namespace
type                             --> entity.name.type
type.defaultLibrary              --> support.type
struct                           --> storage.type.struct
class                            --> entity.name.type.class
class.defaultLibrary             --> support.class
interface                        --> entity.name.type.interface
enum                             --> entity.name.type.enum
function                         --> entity.name.function
function.defaultLibrary          --> support.function
method                           --> entity.name.function.member
macro                            --> entity.name.function.macro
variable                         --> variable.other.readwrite , entity.name.variable
variable.readonly                --> variable.other.constant
variable.readonly.defaultLibrary --> support.constant
parameter                        --> variable.parameter
property                         --> variable.other.property
property.readonly                --> variable.other.constant.property
enumMember                       --> variable.other.enummember
event                            --> variable.other.event
